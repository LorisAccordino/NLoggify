### YamlMime:ManagedReference
items:
- uid: NLoggify.Logging.Loggers.Logger
  commentId: T:NLoggify.Logging.Loggers.Logger
  id: Logger
  parent: NLoggify.Logging.Loggers
  children:
  - NLoggify.Logging.Loggers.Logger.#ctor
  - NLoggify.Logging.Loggers.Logger.Dispose
  - NLoggify.Logging.Loggers.Logger.GetLogger
  - NLoggify.Logging.Loggers.Logger.Log(NLoggify.Logging.LogLevel,System.String)
  - NLoggify.Logging.Loggers.Logger.WriteLog(NLoggify.Logging.LogLevel,System.String)
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Logger
  fullName: NLoggify.Logging.Loggers.Logger
  type: Class
  source:
    remote:
      path: NLoggify/Logging/Loggers/Logger.cs
      branch: master
      repo: https://github.com/LorisAccordino/NLoggify.git
    id: Logger
    path: ../NLoggify/Logging/Loggers/Logger.cs
    startLine: 5
  assemblies:
  - NLoggify
  namespace: NLoggify.Logging.Loggers
  summary: Abstract base class for logger representation. The actual implementation of logging (e.g., console, file, etc.) is done in derived classes.
  example: []
  syntax:
    content: 'public abstract class Logger : ILogger, IDisposable'
    content.vb: Public MustInherit Class Logger Implements ILogger, IDisposable
  inheritance:
  - System.Object
  implements:
  - NLoggify.Logging.Loggers.ILogger
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NLoggify.Logging.Loggers.Logger.#ctor
  commentId: M:NLoggify.Logging.Loggers.Logger.#ctor
  id: '#ctor'
  parent: NLoggify.Logging.Loggers.Logger
  langs:
  - csharp
  - vb
  name: Logger()
  nameWithType: Logger.Logger()
  fullName: NLoggify.Logging.Loggers.Logger.Logger()
  type: Constructor
  source:
    remote:
      path: NLoggify/Logging/Loggers/Logger.cs
      branch: master
      repo: https://github.com/LorisAccordino/NLoggify.git
    id: .ctor
    path: ../NLoggify/Logging/Loggers/Logger.cs
    startLine: 13
  assemblies:
  - NLoggify
  namespace: NLoggify.Logging.Loggers
  summary: Prevents direct instantiation of the <xref href="NLoggify.Logging.Loggers.Logger" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected Logger()
    content.vb: Protected Sub New()
  overload: NLoggify.Logging.Loggers.Logger.#ctor*
  nameWithType.vb: Logger.New()
  fullName.vb: NLoggify.Logging.Loggers.Logger.New()
  name.vb: New()
- uid: NLoggify.Logging.Loggers.Logger.GetLogger
  commentId: M:NLoggify.Logging.Loggers.Logger.GetLogger
  id: GetLogger
  parent: NLoggify.Logging.Loggers.Logger
  langs:
  - csharp
  - vb
  name: GetLogger()
  nameWithType: Logger.GetLogger()
  fullName: NLoggify.Logging.Loggers.Logger.GetLogger()
  type: Method
  source:
    remote:
      path: NLoggify/Logging/Loggers/Logger.cs
      branch: master
      repo: https://github.com/LorisAccordino/NLoggify.git
    id: GetLogger
    path: ../NLoggify/Logging/Loggers/Logger.cs
    startLine: 39
  assemblies:
  - NLoggify
  namespace: NLoggify.Logging.Loggers
  summary: Gets the singleton instance of the logger. This has to be used in the entire logging system.
  example: []
  syntax:
    content: public static ILogger GetLogger()
    return:
      type: NLoggify.Logging.Loggers.ILogger
      description: Logger instance.
    content.vb: Public Shared Function GetLogger() As ILogger
  overload: NLoggify.Logging.Loggers.Logger.GetLogger*
- uid: NLoggify.Logging.Loggers.Logger.Log(NLoggify.Logging.LogLevel,System.String)
  commentId: M:NLoggify.Logging.Loggers.Logger.Log(NLoggify.Logging.LogLevel,System.String)
  id: Log(NLoggify.Logging.LogLevel,System.String)
  parent: NLoggify.Logging.Loggers.Logger
  langs:
  - csharp
  - vb
  name: Log(LogLevel, string)
  nameWithType: Logger.Log(LogLevel, string)
  fullName: NLoggify.Logging.Loggers.Logger.Log(NLoggify.Logging.LogLevel, string)
  type: Method
  source:
    remote:
      path: NLoggify/Logging/Loggers/Logger.cs
      branch: master
      repo: https://github.com/LorisAccordino/NLoggify.git
    id: Log
    path: ../NLoggify/Logging/Loggers/Logger.cs
    startLine: 60
  assemblies:
  - NLoggify
  namespace: NLoggify.Logging.Loggers
  summary: Logs a message with the specified log level.
  example: []
  syntax:
    content: public void Log(LogLevel level, string message)
    parameters:
    - id: level
      type: NLoggify.Logging.LogLevel
      description: The log level that categorizes the importance of the message.
    - id: message
      type: System.String
      description: The log message to be recorded.
    content.vb: Public Sub Log(level As LogLevel, message As String)
  overload: NLoggify.Logging.Loggers.Logger.Log*
  implements:
  - NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel,System.String)
  nameWithType.vb: Logger.Log(LogLevel, String)
  fullName.vb: NLoggify.Logging.Loggers.Logger.Log(NLoggify.Logging.LogLevel, String)
  name.vb: Log(LogLevel, String)
- uid: NLoggify.Logging.Loggers.Logger.WriteLog(NLoggify.Logging.LogLevel,System.String)
  commentId: M:NLoggify.Logging.Loggers.Logger.WriteLog(NLoggify.Logging.LogLevel,System.String)
  id: WriteLog(NLoggify.Logging.LogLevel,System.String)
  parent: NLoggify.Logging.Loggers.Logger
  langs:
  - csharp
  - vb
  name: WriteLog(LogLevel, string)
  nameWithType: Logger.WriteLog(LogLevel, string)
  fullName: NLoggify.Logging.Loggers.Logger.WriteLog(NLoggify.Logging.LogLevel, string)
  type: Method
  source:
    remote:
      path: NLoggify/Logging/Loggers/Logger.cs
      branch: master
      repo: https://github.com/LorisAccordino/NLoggify.git
    id: WriteLog
    path: ../NLoggify/Logging/Loggers/Logger.cs
    startLine: 75
  assemblies:
  - NLoggify
  namespace: NLoggify.Logging.Loggers
  summary: Writes the log message to the target output. Must be implemented by derived classes.
  example: []
  syntax:
    content: protected abstract void WriteLog(LogLevel level, string message)
    parameters:
    - id: level
      type: NLoggify.Logging.LogLevel
      description: The severity level of the log message.
    - id: message
      type: System.String
      description: The log message to be recorded.
    content.vb: Protected MustOverride Sub WriteLog(level As LogLevel, message As String)
  overload: NLoggify.Logging.Loggers.Logger.WriteLog*
  nameWithType.vb: Logger.WriteLog(LogLevel, String)
  fullName.vb: NLoggify.Logging.Loggers.Logger.WriteLog(NLoggify.Logging.LogLevel, String)
  name.vb: WriteLog(LogLevel, String)
- uid: NLoggify.Logging.Loggers.Logger.Dispose
  commentId: M:NLoggify.Logging.Loggers.Logger.Dispose
  id: Dispose
  parent: NLoggify.Logging.Loggers.Logger
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Logger.Dispose()
  fullName: NLoggify.Logging.Loggers.Logger.Dispose()
  type: Method
  source:
    remote:
      path: NLoggify/Logging/Loggers/Logger.cs
      branch: master
      repo: https://github.com/LorisAccordino/NLoggify.git
    id: Dispose
    path: ../NLoggify/Logging/Loggers/Logger.cs
    startLine: 84
  assemblies:
  - NLoggify
  namespace: NLoggify.Logging.Loggers
  summary: Releases all resources used by the <xref href="NLoggify.Logging.Loggers.Logger" data-throw-if-not-resolved="false"></xref> class.
  remarks: >-
    This method is used to release any unmanaged resources or perform cleanup tasks when the logger

    is no longer needed. It should be called explicitly or automatically via a using block or finalizer.
  example: []
  syntax:
    content: public abstract void Dispose()
    content.vb: Public MustOverride Sub Dispose()
  overload: NLoggify.Logging.Loggers.Logger.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: NLoggify.Logging.Loggers
  commentId: N:NLoggify.Logging.Loggers
  href: NLoggify.html
  name: NLoggify.Logging.Loggers
  nameWithType: NLoggify.Logging.Loggers
  fullName: NLoggify.Logging.Loggers
  spec.csharp:
  - uid: NLoggify
    name: NLoggify
    href: NLoggify.html
  - name: .
  - uid: NLoggify.Logging
    name: Logging
    href: NLoggify.Logging.html
  - name: .
  - uid: NLoggify.Logging.Loggers
    name: Loggers
    href: NLoggify.Logging.Loggers.html
  spec.vb:
  - uid: NLoggify
    name: NLoggify
    href: NLoggify.html
  - name: .
  - uid: NLoggify.Logging
    name: Logging
    href: NLoggify.Logging.html
  - name: .
  - uid: NLoggify.Logging.Loggers
    name: Loggers
    href: NLoggify.Logging.Loggers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NLoggify.Logging.Loggers.ILogger
  commentId: T:NLoggify.Logging.Loggers.ILogger
  parent: NLoggify.Logging.Loggers
  href: NLoggify.Logging.Loggers.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: NLoggify.Logging.Loggers.ILogger
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NLoggify.Logging.Loggers.Logger
  commentId: T:NLoggify.Logging.Loggers.Logger
  href: NLoggify.Logging.Loggers.Logger.html
  name: Logger
  nameWithType: Logger
  fullName: NLoggify.Logging.Loggers.Logger
- uid: NLoggify.Logging.Loggers.Logger.#ctor*
  commentId: Overload:NLoggify.Logging.Loggers.Logger.#ctor
  href: NLoggify.Logging.Loggers.Logger.html#NLoggify_Logging_Loggers_Logger__ctor
  name: Logger
  nameWithType: Logger.Logger
  fullName: NLoggify.Logging.Loggers.Logger.Logger
  nameWithType.vb: Logger.New
  fullName.vb: NLoggify.Logging.Loggers.Logger.New
  name.vb: New
- uid: NLoggify.Logging.Loggers.Logger.GetLogger*
  commentId: Overload:NLoggify.Logging.Loggers.Logger.GetLogger
  href: NLoggify.Logging.Loggers.Logger.html#NLoggify_Logging_Loggers_Logger_GetLogger
  name: GetLogger
  nameWithType: Logger.GetLogger
  fullName: NLoggify.Logging.Loggers.Logger.GetLogger
- uid: NLoggify.Logging.Loggers.Logger.Log*
  commentId: Overload:NLoggify.Logging.Loggers.Logger.Log
  href: NLoggify.Logging.Loggers.Logger.html#NLoggify_Logging_Loggers_Logger_Log_NLoggify_Logging_LogLevel_System_String_
  name: Log
  nameWithType: Logger.Log
  fullName: NLoggify.Logging.Loggers.Logger.Log
- uid: NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel,System.String)
  commentId: M:NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel,System.String)
  parent: NLoggify.Logging.Loggers.ILogger
  isExternal: true
  href: NLoggify.Logging.Loggers.ILogger.html#NLoggify_Logging_Loggers_ILogger_Log_NLoggify_Logging_LogLevel_System_String_
  name: Log(LogLevel, string)
  nameWithType: ILogger.Log(LogLevel, string)
  fullName: NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel, string)
  nameWithType.vb: ILogger.Log(LogLevel, String)
  fullName.vb: NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel, String)
  name.vb: Log(LogLevel, String)
  spec.csharp:
  - uid: NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel,System.String)
    name: Log
    href: NLoggify.Logging.Loggers.ILogger.html#NLoggify_Logging_Loggers_ILogger_Log_NLoggify_Logging_LogLevel_System_String_
  - name: (
  - uid: NLoggify.Logging.LogLevel
    name: LogLevel
    href: NLoggify.Logging.LogLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NLoggify.Logging.Loggers.ILogger.Log(NLoggify.Logging.LogLevel,System.String)
    name: Log
    href: NLoggify.Logging.Loggers.ILogger.html#NLoggify_Logging_Loggers_ILogger_Log_NLoggify_Logging_LogLevel_System_String_
  - name: (
  - uid: NLoggify.Logging.LogLevel
    name: LogLevel
    href: NLoggify.Logging.LogLevel.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NLoggify.Logging.LogLevel
  commentId: T:NLoggify.Logging.LogLevel
  parent: NLoggify.Logging
  href: NLoggify.Logging.LogLevel.html
  name: LogLevel
  nameWithType: LogLevel
  fullName: NLoggify.Logging.LogLevel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NLoggify.Logging
  commentId: N:NLoggify.Logging
  href: NLoggify.html
  name: NLoggify.Logging
  nameWithType: NLoggify.Logging
  fullName: NLoggify.Logging
  spec.csharp:
  - uid: NLoggify
    name: NLoggify
    href: NLoggify.html
  - name: .
  - uid: NLoggify.Logging
    name: Logging
    href: NLoggify.Logging.html
  spec.vb:
  - uid: NLoggify
    name: NLoggify
    href: NLoggify.html
  - name: .
  - uid: NLoggify.Logging
    name: Logging
    href: NLoggify.Logging.html
- uid: NLoggify.Logging.Loggers.Logger.WriteLog*
  commentId: Overload:NLoggify.Logging.Loggers.Logger.WriteLog
  href: NLoggify.Logging.Loggers.Logger.html#NLoggify_Logging_Loggers_Logger_WriteLog_NLoggify_Logging_LogLevel_System_String_
  name: WriteLog
  nameWithType: Logger.WriteLog
  fullName: NLoggify.Logging.Loggers.Logger.WriteLog
- uid: NLoggify.Logging.Loggers.Logger.Dispose*
  commentId: Overload:NLoggify.Logging.Loggers.Logger.Dispose
  href: NLoggify.Logging.Loggers.Logger.html#NLoggify_Logging_Loggers_Logger_Dispose
  name: Dispose
  nameWithType: Logger.Dispose
  fullName: NLoggify.Logging.Loggers.Logger.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
